package com.adhocstatement.reportgeneration.model;

import java.util.Date;


import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.Data;


@Data
@JsonIgnoreProperties(ignoreUnknown = true)
@DynamoDBTable(tableName = "STATEMENT_REQUEST")
public class StatementRequest {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String statementRequestId;

	 
	@DynamoDBAttribute
	private String accountNumber;
	
	
	@JsonFormat(pattern = "yyyy-MM-dd")
	@DynamoDBAttribute
	private String periodFrom;

	@JsonFormat(pattern = "yyyy-MM-dd")
	@DynamoDBAttribute
	private String periodTo;
	
	@DynamoDBAttribute
	private String channel;
	@DynamoDBAttribute
	private String statementType;
	@DynamoDBAttribute
	private String crnNumber;

	@DynamoDBAttribute
	private Long durationInDays;
	
	@DynamoDBIndexHashKey(globalSecondaryIndexName = "searchWithStatusindex")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String statementRequestStatus;

	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@DynamoDBRangeKey(attributeName="createdTime") // sort key
	private Date createdTime;

	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@DynamoDBAttribute
	private Date updatedTime;

	@DynamoDBAttribute
	private String emailAddress;


	@DynamoDBVersionAttribute
	private Long version;

	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	private Date requestedFromDate;

	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	private Date requestedToDate;
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	@DynamoDBAttribute
	private Date process1EndTime;
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	@DynamoDBAttribute
	private Date process1StartTime;
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	@DynamoDBAttribute
	private Date process2EndTime;
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	@DynamoDBAttribute
	private Date process2StartTime;
	

	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	@DynamoDBAttribute
	private Date process3EndTime;
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonProperty(access = Access.WRITE_ONLY)
	@DynamoDBAttribute
	private Date process3StartTime;
	
	@DynamoDBAttribute
	private String reprocessCount;
	
	@DynamoDBAttribute
	private String failedDescrption;
	
	/*
	 * @DynamoDBAttribute(attributeName = "periodFrom") public Date getPeriodFrom()
	 * { return periodFrom; }
	 * 
	 * public void setPeriodFrom(Date periodFrom) { this.periodFrom = periodFrom; }
	 * 
	 * @DynamoDBAttribute(attributeName = "periodTo") public Date getPeriodTo() {
	 * return periodTo; }
	 * 
	 * public void setPeriodTo(Date periodTo) { this.periodTo = periodTo; }
	 */

	public Date getRequestedFromDate() {
		return requestedFromDate;
	}

	public void setRequestedFromDate(Date requestedFromDate) {
		this.requestedFromDate = requestedFromDate;
	}

	public Date getRequestedToDate() {
		return requestedToDate;
	}

	public void setRequestedToDate(Date requestedToDate) {
		this.requestedToDate = requestedToDate;
	}

}
